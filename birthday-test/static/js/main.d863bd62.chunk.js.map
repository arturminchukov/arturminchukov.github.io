{"version":3,"sources":["components/AnswerOption/AnswerOption.js","components/Question/Question.js","pages/Main/Main.js","pages/RewardPage/RewardPageWithPassphrase.js","pages/RewardPage/RewardPage.js","tests/tora-birthday-test.js","App.js","pages/WelcomePage/WelcomePage.js","pages/EndGamePage/EndGamePage.js","serviceWorker.js","index.js"],"names":["AnswerOption","_ref","answer","handleClick","mode","answerLabel","extraClass","concat","react","className","onClick","Question","question","answers","handleAnswer","rightAnswer","answersKeys","Object","keys","_useState","useState","_useState2","slicedToArray","userAnswer","setUserAnswer","_useState3","_useState4","isShowRightAnswer","setIsShowRightAnswer","react_default","a","createElement","length","map","answerKey","AnswerOption_AnswerOption","key","setTimeout","Main","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickAnswer","bind","assertThisInitialized","state","currentQuestion","score","inherits","createClass","value","test","questions","finishMainPage","page","console","log","setState","Question_Question","right","React","POINT_TO_WIN","RewardPageWithPassphrase","notification","isSuccessfullyComplete","rewards","name","A","B","C","D","price","pages","WelcomePage","startGame","RewardPage","EndGamePage","prises","_ref2","pagesPriority","App","pagePriority","testState","nextPage","payload","prevState","objectSpread","_this$state","pageKey","Page","defaultProps","finishGame","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d863bd62.chunk.js","sourcesContent":["import * as React from 'react';\nimport './AnswerOption.less';\n\nexport function AnswerOption({answer, handleClick, mode, answerLabel}) {\n    const extraClass = mode ? `AnswerOption__button_${mode}` : '';\n    return (\n        <div className=\"AnswerOption\">\n            <span className=\"AnswerOption__label\">{answerLabel}</span>\n            <button\n                className={`AnswerOption__button ${extraClass}`}\n                onClick={handleClick}\n            >\n                {answer}\n            </button>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport {AnswerOption} from '../AnswerOption/AnswerOption';\nimport './Question.less';\n\nexport function Question({question, answers, handleAnswer, rightAnswer}) {\n    const answersKeys = Object.keys(answers);\n    const [userAnswer, setUserAnswer] = useState(false);\n    const [isShowRightAnswer, setIsShowRightAnswer] = useState(false);\n\n    const handleClick = (key) => {\n        if(userAnswer){\n            return;\n        }\n\n        setUserAnswer(key);\n\n        setTimeout(() => {\n            setIsShowRightAnswer(true)\n        }, 2000);\n\n        setTimeout(() => {\n            setIsShowRightAnswer(false);\n            setUserAnswer(false);\n            handleAnswer(key===rightAnswer);\n        }, 4000);\n    };\n\n    let mode = null;\n\n    if(userAnswer && !isShowRightAnswer){\n        mode = 'chosen';\n    } else if (isShowRightAnswer && userAnswer===rightAnswer){\n        mode = 'correct'\n    } else {\n        mode = 'incorrect'\n    }\n\n    return (\n        <div className=\"Question\">\n            <div className=\"Question__question-text\">\n                {question}\n            </div>\n            <div className={`Question__answers Question__answers-${answersKeys.length}`}>\n                {answersKeys.map(answerKey =>\n                    <AnswerOption\n                        answer={answers[answerKey]}\n                        handleClick={() => handleClick(answerKey)}\n                        key={answerKey}\n                        mode={answerKey === userAnswer ? mode : null}\n                    />)}\n            </div>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport {Question} from '../../components/Question/Question';\nimport './Main.less';\n\nexport class Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClickAnswer = this.handleClickAnswer.bind(this);\n        this.state = {\n            currentQuestion: 0,\n            score: 0\n        }\n    }\n\n    handleClickAnswer(key) {\n        const {currentQuestion} = this.state;\n        let score = this.state.score;\n        score += key ? this.props.test.questions[currentQuestion].score : 0;\n\n        if(currentQuestion === this.props.test.questions.length - 1){\n            this.props.finishMainPage({page: 'Main', score});\n            console.log(score);\n        } else {\n            this.setState({\n                currentQuestion: currentQuestion + 1,\n                score,\n            })\n        }\n    }\n\n    render() {\n        const {currentQuestion} = this.state;\n\n        return (\n            <div className=\"Main\">\n                <Question\n                    question={this.props.test.questions[currentQuestion].question}\n                    answers={this.props.test.questions[currentQuestion].answers}\n                    handleAnswer={this.handleClickAnswer}\n                    rightAnswer={this.props.test.questions[currentQuestion].right}\n                />\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport './RewardPage.less';\n\nconst POINT_TO_WIN = 7;\n\nexport class RewardPageWithPassphrase extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnotification: '',\n\t\t\tisSuccessfullyComplete: props.score >= POINT_TO_WIN,\n\t\t};\n\t}\n\n\trender() {\n\t\tconst {test} = this.props;\n\t\tconst {isSuccessfullyComplete} = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"RewardPage\">\n\t\t\t\t<div className=\"RewardPage__about\">\n\t\t\t\t\t{isSuccessfullyComplete ?\n\t\t\t\t\t\t<h1 className=\"RewardPage__header\">Отлично, ваше кодовое слово\n\t\t\t\t\t\t\t<b className=\"RewardPage__score\"> {test.rewards[0].name} </b>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tЗапомните, оно вам понадобится чтобы получить подарок =)\n\t\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t: <h1 className=\"RewardPage__header\">К сожалению, вы не прошли тест и не получили кодовое слово, попробуйте\n\t\t\t\t\t\t\tеще раз.</h1>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { AnswerOption } from '../../components/AnswerOption/AnswerOption';\nimport './RewardPage.less';\n\nconst notificationIfExistBalance = 'Пожалуйста потратье все баллы. Еще есть призы на которые вам хватает баллов.';\nconst DELAY_PER_SYMBOL = 60;\n\nexport class RewardPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchosenPrises: [],\n\t\t\tbalance: props.score,\n\t\t\tnotification: '',\n\t\t\tisRemainPrises: this.isRemainRewards([], props.score)\n\t\t};\n\n\t\tthis.handleClickReward = this.handleClickReward.bind(this);\n\t\tthis.handleGetPrises = this.handleGetPrises.bind(this);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (this.state.notification) {\n\t\t\tif (this.notificationTimer) {\n\t\t\t\tclearTimeout(this.notificationTimer);\n\t\t\t}\n\n\t\t\tconst {notification} = this.state;\n\t\t\tconst notificationDelay = DELAY_PER_SYMBOL * notification.length > 2000 ? DELAY_PER_SYMBOL * notification.length : 2000;\n\n\t\t\tthis.notificationTimer = setTimeout((context) => context.setState({notification: ''}), notificationDelay, this);\n\t\t}\n\t}\n\n\thandleClickReward(id) {\n\t\tconst {chosenPrises, balance} = this.state;\n\t\tlet newChosenPrises = [...chosenPrises];\n\t\tlet newBalance = balance;\n\t\tlet notification = '';\n\n\t\tif (chosenPrises.includes(id)) {\n\t\t\tnewChosenPrises = chosenPrises.filter(prise => prise !== id);\n\t\t\tnewBalance += this.props.test.rewards[id].price;\n\t\t} else {\n\t\t\tif (newBalance - this.props.test.rewards[id].price > 0) {\n\t\t\t\tnewChosenPrises = [...chosenPrises, id];\n\t\t\t\tnewBalance -= this.props.test.rewards[id].price;\n\t\t\t} else {\n\t\t\t\tnotification = `Не хватает ${this.props.test.rewards[id].price - newBalance} очков для получения  приза \"${this.props.test.rewards[id].name}\"`;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tchosenPrises: newChosenPrises,\n\t\t\tbalance: newBalance,\n\t\t\tnotification,\n\t\t\tisRemainPrises: this.isRemainRewards(newChosenPrises, newBalance)\n\t\t});\n\t}\n\n\thandleGetPrises() {\n\t\tconst {chosenPrises, balance} = this.state;\n\n\t\tif (this.isRemainRewards(chosenPrises, balance)) {\n\t\t\tthis.setState({notification: notificationIfExistBalance});\n\t\t} else {\n\t\t\tthis.props.finishGame({prises: this.props.test.rewards.filter((el, id) => chosenPrises.includes(id))});\n\t\t}\n\t}\n\n\tisRemainRewards(chosenPrises, balance) {\n\t\tconst remainPrises = this.props.test.rewards.filter((el, id) => !chosenPrises.includes(id));\n\n\t\treturn remainPrises.some(el => el.price < balance);\n\t}\n\n\trender() {\n\t\tconst {score, test: {rewards}} = this.props;\n\t\tconst {balance, chosenPrises, notification, isRemainPrises} = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"RewardPage\">\n\t\t\t\t<div className=\"RewardPage__about\">\n\t\t\t\t\t<h1 className=\"RewardPage__header\">Отлично вы набрали\n\t\t\t\t\t\t<b className=\"RewardPage__score\"> ${score} </b>\n\t\t\t\t\t\tочков. И теперь вы можете их потратить на то, на что\n\t\t\t\t\t\tтолько пожелаете, ну и если их хватает</h1>\n\t\t\t\t\t<h1 className=\"RewardPage__balance\">Ваш баланс: <b className=\"RewardPage__score\">${balance}</b></h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"RewardPage__rewards\">\n\t\t\t\t\t{rewards.map((reward, id) =>\n\t\t\t\t\t\t<AnswerOption\n\t\t\t\t\t\t\tkey={reward.price + reward.name}\n\t\t\t\t\t\t\tanswer={reward.name}\n\t\t\t\t\t\t\thandleClick={() => this.handleClickReward(id)}\n\t\t\t\t\t\t\tanswerLabel={reward.price + '$'}\n\t\t\t\t\t\t\tmode={chosenPrises.includes(id) ? 'selected-prise' : 'prise'}\n\t\t\t\t\t\t/>)}\n\t\t\t\t</div>\n\t\t\t\t<button onClick={this.handleGetPrises}\n\t\t\t\t\t\t\t\tclassName={`RewardPage__get-prises ${!isRemainPrises && 'RewardPage__get-prises_active'}`}>Получить\n\t\t\t\t\tпризы!!!\n\t\t\t\t</button>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`RewardPage__notification ${notification && 'RewardPage__notification_show'}`}>{notification}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","const test = {\n\tquestions: [\n\t\t{\n\t\t\tquestion: 'В каком году отменили крепостное право',\n\t\t\tanswers: {\n\t\t\t\tA: '1861',\n\t\t\t\tB: '1865',\n\t\t\t\tC: '1961',\n\t\t\t\tD: 'Еще не отменили',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'A'\n\t\t}, {\n\t\t\tquestion: 'Как на английском будет \"Доброе утро\"',\n\t\t\tanswers: {\n\t\t\t\tA: 'Guten tak',\n\t\t\t\tB: 'Have a nice day',\n\t\t\t\tC: 'Good morning',\n\t\t\t\tD: 'Pink brown red',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'C'\n\t\t}, {\n\t\t\tquestion: 'Сколько материков на планете земля?',\n\t\t\tanswers: {\n\t\t\t\tA: '4',\n\t\t\t\tB: '5',\n\t\t\t\tC: '6',\n\t\t\t\tD: '7',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'C'\n\t\t}, {\n\t\t\tquestion: 'Сколько население планеты земля',\n\t\t\tanswers: {\n\t\t\t\tA: '1 000 000 000',\n\t\t\t\tB: '5 646 000 330',\n\t\t\t\tC: '7 155 357 369',\n\t\t\t\tD: '7 655 957 369',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'D'\n\t\t}, {\n\t\t\tquestion: 'Открывок из поэмы \"Мое имя - ...\"',\n\t\t\tanswers: {\n\t\t\t\tA: 'Саша',\n\t\t\t\tB: 'Александра',\n\t\t\t\tC: 'Цвирко Александра Игоревна',\n\t\t\t\tD: 'Тора',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'B'\n\t\t}, {\n\t\t\tquestion: 'В каком году была вторая мировая война?',\n\t\t\tanswers: {\n\t\t\t\tA: '1938',\n\t\t\t\tB: '1939',\n\t\t\t\tC: '1940',\n\t\t\t\tD: '1941',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'B'\n\t\t}, {\n\t\t\tquestion: 'Есть число \"111\", которое представлено в двоичной системе исчесления, сколько это будет в десятичной?',\n\t\t\tanswers: {\n\t\t\t\tA: '5',\n\t\t\t\tB: '6',\n\t\t\t\tC: '7',\n\t\t\t\tD: '8',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'C'\n\t\t}, {\n\t\t\tquestion: 'No, you are not the ... for all the world, but you are ... for me',\n\t\t\tanswers: {\n\t\t\t\tA: 'sun',\n\t\t\t\tB: 'the most beautiful',\n\t\t\t\tC: 'friend',\n\t\t\t\tD: 'light',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'C'\n\t\t}, {\n\t\t\tquestion: 'В вашем офисе поставили 3 автомата, которые делают разнообразные напитки. Первый автомат изготавливает кофе, второй делает чай, а третий способен давать один из перечисленных напитков, но не предоставляет право выбора. Чтобы воспользоваться любым аппаратом требуется кинуть 1 монету. На автоматах присутствуют специальные наклейки, обозначающие тип выдаваемого напитка. Одна проблема – по техническим причинам завод перепутал все обозначения. Каждый автомат имеет неправильную наклейку. Вопрос, сколько потребуется монет, чтобы правильно определить тип автоматов?',\n\t\t\tanswers: {\n\t\t\t\tA: '1',\n\t\t\t\tB: '2',\n\t\t\t\tC: '3',\n\t\t\t\tD: '4',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'A'\n\t\t}, {\n\t\t\tquestion: 'Полторы белки за полторы минуты съедают полтора орешка, сколько орехов съедят 9 белок за 9 минут',\n\t\t\tanswers: {\n\t\t\t\tA: '1,5 ореха',\n\t\t\t\tB: '9 орехов',\n\t\t\t\tC: '36 орехов',\n\t\t\t\tD: '54 ореха',\n\t\t\t},\n\t\t\tscore: 1,\n\t\t\tright: 'D'\n\t\t}\n\t],\n\trewards: [\n\t\t{\n\t\t\tname: 'I LOVE DANCING',\n\t\t\tprice: 0\n\t\t}\n\t]\n};\n\nexport default test;\n","import React from 'react';\nimport './App.less';\nimport { WelcomePage } from './pages/WelcomePage/WelcomePage';\nimport { Main } from './pages/Main/Main';\nimport { RewardPage } from './pages/RewardPage/RewardPage';\nimport { RewardPageWithPassphrase } from './pages/RewardPage/RewardPageWithPassphrase';\nimport { EndGamePage } from './pages/EndGamePage/EndGamePage';\nimport test from './tests/tora-birthday-test';\n\nconst pages = {\n\tWelcomePage: WelcomePage,\n\tMain: Main,\n\tRewardPage: RewardPageWithPassphrase,\n\tEndGamePage: EndGamePage\n};\n\nconst pagesPriority = ['WelcomePage', 'Main', 'RewardPage', 'EndGamePage'];\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tpagePriority: 0,\n\t\t\ttestState: {},\n\t\t};\n\n\t\tthis.nextPage = this.nextPage.bind(this);\n\t}\n\n\tnextPage(payload) {\n\t\tthis.setState(prevState => ({\n\t\t\tpagePriority: prevState.pagePriority + 1,\n\t\t\ttestState: {\n\t\t\t\t...prevState.testState,\n\t\t\t\t...payload\n\t\t\t}\n\t\t}));\n\t}\n\n\trender() {\n\t\tconst {pagePriority, testState} = this.state;\n\t\tconst pageKey = pagesPriority[pagePriority];\n\t\tconst Page = pages[pageKey];\n\t\tconst defaultProps = {\n\t\t\ttest\n\t\t};\n\t\tlet props = null;\n\n\t\tif (pageKey === 'WelcomePage') {\n\t\t\tprops = {\n\t\t\t\t...defaultProps,\n\t\t\t\tstartGame: this.nextPage\n\t\t\t};\n\t\t}\n\n\t\tif (pageKey === 'Main') {\n\t\t\tprops = {\n\t\t\t\t...defaultProps,\n\t\t\t\tfinishMainPage: this.nextPage\n\t\t\t};\n\t\t}\n\n\t\tif (pageKey === 'RewardPage') {\n\t\t\tprops = {\n\t\t\t\t...defaultProps,\n\t\t\t\tscore: testState.score,\n\t\t\t\tfinishGame: this.nextPage\n\t\t\t};\n\t\t}\n\n\t\tif (pageKey === 'EndGamePage') {\n\t\t\tprops = {\n\t\t\t\t...defaultProps,\n\t\t\t\tprises: testState.prises\n\t\t\t};\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Page {...props} />\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default App;\n","import * as React from 'react';\nimport './WelcomePage.less';\n\nexport function WelcomePage({startGame}) {\n    const handleClick = () => {\n        startGame({});\n    };\n\n    return (\n        <div className=\"WelcomePage\">\n            <div className=\"WelcomePage__container\">\n                <h1>Добро пожаловать на очередные Великие игры! Приготовьтесь и будьте внимательные, от вас потребуется\n                    смекалка и знания.</h1>\n                <button onClick={handleClick}>\n                    Давайте же начнем!!!\n                </button>\n            </div>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport './EndGamePage.less';\n\nexport function EndGamePage({prises}) {\n    return (\n        <div className=\"EndGamePage\">\n            <h1 className=\"EndGamePage__header\"> Спасибо, что приняли участие в нашей игре, вот список ваших призов!!!</h1>\n            <div className=\"EndGamePage__prises-list\">\n                {prises.map(({name}) => <div className=\"EndGamePage__prise\">{name}!!!</div>)}\n            </div>\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}