{"version":3,"sources":["tests/father-birthday-test.js","components/AnswerOption/AnswerOption.js","components/Question/Question.js","pages/Main/Main.js","pages/RewardPage/RewardPage.js","App.js","pages/WelcomePage/WelcomePage.js","pages/EndGamePage/EndGamePage.js","serviceWorker.js","index.js"],"names":["test","questions","question","answers","A","B","C","D","score","right","rewards","name","price","AnswerOption","_ref","answer","handleClick","mode","answerLabel","extraClass","concat","react","className","onClick","Question","handleAnswer","rightAnswer","answersKeys","Object","keys","_useState","useState","_useState2","slicedToArray","userAnswer","setUserAnswer","_useState3","_useState4","isShowRightAnswer","setIsShowRightAnswer","react_default","a","createElement","length","map","answerKey","AnswerOption_AnswerOption","key","setTimeout","Main","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickAnswer","bind","assertThisInitialized","state","currentQuestion","inherits","createClass","value","finishMainPage","page","console","log","setState","Question_Question","React","RewardPage","chosenPrises","balance","notification","isRemainPrises","isRemainRewards","handleClickReward","handleGetPrises","prevProps","prevState","snapshot","notificationTimer","clearTimeout","notificationDelay","context","id","_this$state","newChosenPrises","toConsumableArray","newBalance","includes","filter","prise","_this$state2","finishGame","prises","el","some","_this2","_this$state3","reward","pages","WelcomePage","startGame","EndGamePage","_ref2","pagesPriority","App","pagePriority","testState","nextPage","payload","objectSpread","pageKey","Page","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b95ec69b.chunk.js","sourcesContent":["const test = {\n    questions: [\n        {\n            question: 'В каком году отменили крепостное право',\n            answers: {\n                A: '1861',\n                B: '1865',\n                C: '1961',\n                D: 'Еще не отменили',\n            },\n            score: 100,\n            right: 'A'\n        }, {\n            question: 'Как на английском будет \"Доброе утро\"',\n            answers: {\n                A: 'Guten tak',\n                B: 'Have a nice day',\n                C: 'Good morning',\n                D: 'Pink brown red',\n            },\n            score: 200,\n            right: 'C'\n        }, {\n            question: 'Сколько материков на планете земля?',\n            answers: {\n                A: '4',\n                B: '5',\n                C: '6',\n                D: '7',\n            },\n            score: 200,\n            right: 'C'\n        }, {\n            question: 'Сколько население планеты земля',\n            answers: {\n                A: '1 000 000 000',\n                B: '5 646 000 330',\n                C: '7 155 357 369',\n                D: '7 655 957 369',\n            },\n            score: 200,\n            right: 'D'\n        }, {\n            question: 'Кто открывает ...',\n            answers: {\n                A: 'Тот открыватель',\n                B: 'Тот и закрывает',\n                C: 'Тот не закрывает',\n                D: 'Тот убегает',\n            },\n            score: 100,\n            right: 'B'\n        }, {\n            question: 'В каком году была вторая мировая война?',\n            answers: {\n                A: '1938',\n                B: '1939',\n                C: '1940',\n                D: '1941',\n            },\n            score: 200,\n            right: 'B'\n        }, {\n            question: 'Есть число \"111\", которое представлено в двоичной системе исчесления, сколько это будет в десятичной?',\n            answers: {\n                A: '5',\n                B: '6',\n                C: '7',\n                D: '8',\n            },\n            score: 500,\n            right: 'C'\n        }, {\n            question: 'В каком порядке работают цилиндры в МТЗ-80',\n            answers: {\n                A: '1-2-3-4',\n                B: '4-3-2-1',\n                C: '1-4-2-3',\n                D: '1-3-4-2',\n            },\n            score: 200,\n            right: 'D'\n        }, {\n            question: 'В вашем офисе поставили 3 автомата, которые делают разнообразные напитки. Первый автомат изготавливает кофе, второй делает чай, а третий способен давать один из перечисленных напитков, но не предоставляет право выбора. Чтобы воспользоваться любым аппаратом требуется кинуть 1 монету. На автоматах присутствуют специальные наклейки, обозначающие тип выдаваемого напитка. Одна проблема – по техническим причинам завод перепутал все обозначения. Каждый автомат имеет неправильную наклейку. Вопрос, сколько потребуется монет, чтобы правильно определить тип автоматов?',\n            answers: {\n                A: '1',\n                B: '2',\n                C: '3',\n                D: '4',\n            },\n            score: 1000,\n            right: 'A'\n        }, {\n            question: 'Полторы белки за полторы минуты съедают полтора орешка, сколько орехов съедят 9 белок за 9 минут',\n            answers: {\n                A: '1,5 ореха',\n                B: '9 орехов',\n                C: '36 орехов',\n                D: '54 ореха',\n            },\n            score: 1000,\n            right: 'D'\n        }\n    ],\n    rewards: [\n        {\n            name:'Самолет',\n            price: 1000000\n        }, {\n            name:'Смартфон',\n            price: 20000\n        },{\n            name:'Красивый лесной чехол',\n            price: 1500\n        },{\n            name:'Автомобиль',\n            price: 50000\n        },{\n            name:'Красивый обычный пластиковый чехол',\n            price: 1500\n        },{\n            name:'Шоколадка',\n            price: 1000\n        },{\n            name:'Автомобильный держатель для смартфона',\n            price: 5000\n        },{\n            name:'Квартира',\n            price: 100000\n        },\n    ]\n\n};\n\nexport default test;\n","import * as React from 'react';\nimport './AnswerOption.less';\n\nexport function AnswerOption({answer, handleClick, mode, answerLabel}) {\n    const extraClass = mode ? `AnswerOption__button_${mode}` : '';\n    return (\n        <div className=\"AnswerOption\">\n            <span className=\"AnswerOption__label\">{answerLabel}</span>\n            <button\n                className={`AnswerOption__button ${extraClass}`}\n                onClick={handleClick}\n            >\n                {answer}\n            </button>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport {AnswerOption} from '../AnswerOption/AnswerOption';\nimport './Question.less';\n\nexport function Question({question, answers, handleAnswer, rightAnswer}) {\n    const answersKeys = Object.keys(answers);\n    const [userAnswer, setUserAnswer] = useState(false);\n    const [isShowRightAnswer, setIsShowRightAnswer] = useState(false);\n\n    const handleClick = (key) => {\n        if(userAnswer){\n            return;\n        }\n\n        setUserAnswer(key);\n\n        setTimeout(() => {\n            setIsShowRightAnswer(true)\n        }, 2000);\n\n        setTimeout(() => {\n            setIsShowRightAnswer(false);\n            setUserAnswer(false);\n            handleAnswer(key===rightAnswer);\n        }, 4000);\n    };\n\n    let mode = null;\n\n    if(userAnswer && !isShowRightAnswer){\n        mode = 'chosen';\n    } else if (isShowRightAnswer && userAnswer===rightAnswer){\n        mode = 'correct'\n    } else {\n        mode = 'incorrect'\n    }\n\n    return (\n        <div className=\"Question\">\n            <div className=\"Question__question-text\">\n                {question}\n            </div>\n            <div className={`Question__answers Question__answers-${answersKeys.length}`}>\n                {answersKeys.map(answerKey =>\n                    <AnswerOption\n                        answer={answers[answerKey]}\n                        handleClick={() => handleClick(answerKey)}\n                        key={answerKey}\n                        mode={answerKey === userAnswer ? mode : null}\n                    />)}\n            </div>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport test from '../../tests/father-birthday-test';\nimport {Question} from '../../components/Question/Question';\nimport './Main.less';\n\nconst {questions} = test;\n\nexport class Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClickAnswer = this.handleClickAnswer.bind(this);\n        this.state = {\n            currentQuestion: 0,\n            score: 0\n        }\n    }\n\n    handleClickAnswer(key) {\n        const {currentQuestion} = this.state;\n        let score = this.state.score;\n        score += key ? questions[currentQuestion].score : 0;\n\n        if(currentQuestion === questions.length - 1){\n            this.props.finishMainPage({page: 'Main', score});\n            console.log(score);\n        } else {\n            this.setState({\n                currentQuestion: currentQuestion + 1,\n                score,\n            })\n        }\n    }\n\n    render() {\n        const {currentQuestion} = this.state;\n\n        return (\n            <div className=\"Main\">\n                <Question\n                    question={questions[currentQuestion].question}\n                    answers={questions[currentQuestion].answers}\n                    handleAnswer={this.handleClickAnswer}\n                    rightAnswer={questions[currentQuestion].right}\n                />\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport test from '../../tests/father-birthday-test';\nimport {AnswerOption} from '../../components/AnswerOption/AnswerOption';\nimport './RewardPage.less';\n\nconst {rewards} = test;\nconst notificationIfExistBalance = 'Пожалуйста потратье все баллы. Еще есть призы на которые вам хватает баллов.';\nconst DELAY_PER_SYMBOL = 60;\n\nexport class RewardPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chosenPrises: [],\n            balance: props.score,\n            notification: '',\n            isRemainPrises: this.isRemainRewards([], props.score)\n        };\n\n        this.handleClickReward = this.handleClickReward.bind(this);\n        this.handleGetPrises = this.handleGetPrises.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.notification) {\n            if (this.notificationTimer) {\n                clearTimeout(this.notificationTimer);\n            }\n\n            const {notification} = this.state;\n            const notificationDelay = DELAY_PER_SYMBOL * notification.length > 2000 ? DELAY_PER_SYMBOL * notification.length : 2000;\n\n            this.notificationTimer = setTimeout((context) => context.setState({notification: ''}), notificationDelay, this);\n        }\n    }\n\n    handleClickReward(id) {\n        const {chosenPrises, balance} = this.state;\n        let newChosenPrises = [...chosenPrises];\n        let newBalance = balance;\n        let notification = '';\n\n        if (chosenPrises.includes(id)) {\n            newChosenPrises = chosenPrises.filter(prise => prise !== id);\n            newBalance += rewards[id].price;\n        } else {\n            if (newBalance - rewards[id].price > 0) {\n                newChosenPrises = [...chosenPrises, id];\n                newBalance -= rewards[id].price;\n            } else {\n                notification = `Не хватает ${rewards[id].price - newBalance} очков для получения  приза \"${rewards[id].name}\"`;\n            }\n        }\n\n        this.setState({\n            chosenPrises: newChosenPrises,\n            balance: newBalance,\n            notification,\n            isRemainPrises: this.isRemainRewards(newChosenPrises, newBalance)\n        })\n    }\n\n    handleGetPrises() {\n        const {chosenPrises, balance} = this.state;\n\n        if (this.isRemainRewards(chosenPrises, balance)) {\n            this.setState({notification: notificationIfExistBalance});\n        } else {\n            this.props.finishGame({prises: rewards.filter((el, id) => chosenPrises.includes(id))});\n        }\n    }\n\n    isRemainRewards(chosenPrises, balance){\n        const remainPrises = rewards.filter((el, id) => !chosenPrises.includes(id));\n\n        return remainPrises.some(el => el.price < balance);\n    }\n\n    render() {\n        const {score} = this.props;\n        const {balance, chosenPrises, notification, isRemainPrises} = this.state;\n\n        return (\n            <div className=\"RewardPage\">\n                <div className=\"RewardPage__about\">\n                    <h1 className=\"RewardPage__header\">Отлично вы набрали\n                        <b className=\"RewardPage__score\"> ${score} </b>\n                        очков. И теперь вы можете их потратить на то, на что\n                        только пожелаете, ну и если их хватает</h1>\n                    <h1 className=\"RewardPage__balance\">Ваш баланс: <b className=\"RewardPage__score\">${balance}</b></h1>\n                </div>\n                <div className=\"RewardPage__rewards\">\n                    {rewards.map((reward, id) =>\n                        <AnswerOption\n                            key={reward.price + reward.name}\n                            answer={reward.name}\n                            handleClick={() => this.handleClickReward(id)}\n                            answerLabel={reward.price+'$'}\n                            mode={chosenPrises.includes(id) ? 'selected-prise' : 'prise'}\n                        />)}\n                </div>\n                <button onClick={this.handleGetPrises} className={`RewardPage__get-prises ${!isRemainPrises && 'RewardPage__get-prises_active'}`}>Получить призы!!!</button>\n                <div\n                    className={`RewardPage__notification ${notification && 'RewardPage__notification_show'}`}>{notification}</div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport './App.less';\nimport {WelcomePage} from './pages/WelcomePage/WelcomePage';\nimport {Main} from './pages/Main/Main';\nimport {RewardPage} from './pages/RewardPage/RewardPage';\nimport {EndGamePage} from './pages/EndGamePage/EndGamePage';\n\nconst pages = {\n    WelcomePage: WelcomePage,\n    Main: Main,\n    RewardPage: RewardPage,\n    EndGamePage: EndGamePage\n};\n\nconst pagesPriority = ['WelcomePage', 'Main', 'RewardPage', 'EndGamePage'];\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pagePriority: 0,\n            testState: {},\n        };\n\n        this.nextPage = this.nextPage.bind(this);\n    }\n\n    nextPage(payload) {\n        this.setState(prevState => ({\n            pagePriority: prevState.pagePriority + 1,\n            testState: {\n                ...prevState.testState,\n                ...payload\n            }\n        }));\n    }\n\n    render() {\n        const {pagePriority, testState} = this.state;\n        const pageKey = pagesPriority[pagePriority];\n        const Page = pages[pageKey];\n        let props = null;\n\n        if (pageKey === 'WelcomePage') {\n            props = {\n                startGame: this.nextPage\n            }\n        }\n\n        if (pageKey === 'Main') {\n            props = {\n                finishMainPage: this.nextPage\n            }\n        }\n\n        if (pageKey === 'RewardPage') {\n            props = {\n                score: testState.score,\n                finishGame: this.nextPage\n            }\n        }\n\n        if (pageKey === 'EndGamePage') {\n            props = {\n                prises: testState.prises\n            }\n        }\n\n        return (\n            <div className=\"App\">\n                <Page {...props} />\n            </div>\n        );\n    };\n}\n\nexport default App;\n","import * as React from 'react';\nimport './WelcomePage.less';\n\nexport function WelcomePage({startGame}) {\n    const handleClick = () => {\n        startGame({});\n    };\n\n    return (\n        <div className=\"WelcomePage\">\n            <div className=\"WelcomePage__container\">\n                <h1>Добро пожаловать на очередные Великие игры! Приготовьтесь и будьте внимательные, от вас потребуется\n                    смекалка и знания.</h1>\n                <button onClick={handleClick}>\n                    Давайте же начнем!!!\n                </button>\n            </div>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport './EndGamePage.less';\n\nexport function EndGamePage({prises}) {\n    return (\n        <div className=\"EndGamePage\">\n            <h1 className=\"EndGamePage__header\"> Спасибо, что приняли участие в нашей игре, вот список ваших призов!!!</h1>\n            <div className=\"EndGamePage__prises-list\">\n                {prises.map(({name}) => <div className=\"EndGamePage__prise\">{name}!!!</div>)}\n            </div>\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}